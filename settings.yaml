default:
  debug: false
  jwt_secret: "secret"
  test: 0
  model:
    cache_dir: "./tmp/cache"
    pre_download_during_build: true
    embedding:
      dimension: 512
      image:
        name: "sentence-transformers/clip-ViT-B-32"
      text:
        name: "sentence-transformers/clip-ViT-B-32-multilingual-v1"
      metadata:
        name: "sentence-transformers/clip-ViT-B-32-multilingual-v1"
    captioning:
      name: "Salesforce/blip-image-captioning-large"
      max_length: 256
    detection:
      name: "jacoballessio/ai-image-detect-distilled"
      threshold: 0.95
    watermark:
      diffusion_model: "stabilityai/sdxl-turbo"
      encoder_name: "imatag/stable-signature-bzh-sdxl-vae-medium"
      decoder_name: "imatag/stable-signature-bzh-detector-resnet18"
      threshold: 15
      strength: 0.05
      interleave_ratio: 0.5
      guidance_scale: 0.05
      num_inference_steps: 25
      gamma: 0
      resolution_longest_size: 1024
    hash:
      method: "phash"  # one of phash, dhash, whash
      threshold: 0.90
  bentoml:
    hf_offline: "false"
    service:
      api:
        tracing:
          exporter_type: "otlp"
          sample_rate: 1.0
          otlp:
            protocol: "http"
            endpoint: "http://localhost:4318/v1/traces"
            http:
              certificate_file: null
              headers:
                Keep-Alive: "timeout=10, max=1000"
        traffic:
          timeout: 120
          max_concurrency: 50
        ssl:
          enabled: false
        http:
          port: 80
        cors:
          enabled: false
      embedding:
        tracing: "@format {this.bentoml.service.api.tracing}"

development:
  test: 1
  eva_backend:
    url: "http://localhost:8000"
    patch_endpoint: "/ai/image/update"
    backend_image_patch_route: "@format {this.eva_backend.url}{this.eva_backend.patch_endpoint}"
  
  bentoml:
    hf_offline: "false"
    service:
      api:
        workers: 1
        resources:
          cpu: 1
          memory: 2Gi
      embedding:
        workers: 1
        resources:
          cpu: 1
          memory: 4Gi
    inference:
      fast_batched_op_max_batch_size: 2
      fast_batched_op_max_latency_ms: 100
      slow_batched_op_max_batch_size: 2
      slow_batched_op_max_latency_ms: 100

  postgres:
    host: "localhost"
    port: 5432
    user: "postgres"
    password: "password"
    db: "eva_ai"
    url: "@format postgresql+asyncpg://{this.postgres.user}:{this.postgres.password}@{this.postgres.host}:{this.postgres.port}/{this.postgres.db}"

production:
  eva_backend:
    url: "https://api.production.example.com"
    patch_endpoint: "/ai/image/update"
    backend_image_patch_route: "@format {this.eva_backend.url}{this.eva_backend.patch_endpoint}"
  
  bentoml:
    hf_offline: "true"
    service:
      api:
        workers: 1
        resources:
          cpu: 8
          memory: 14Gi
      # embedding:  deprecated for now
      #   workers: 8
      #   resources:
      #     cpu: 16
      #     memory: 112Gi
    inference:
      fast_batched_op_max_batch_size: 8
      fast_batched_op_max_latency_ms: 100
      slow_batched_op_max_batch_size: 4
      slow_batched_op_max_latency_ms: 5000

  postgres:
    host: null
    port: null
    user: null
    password: null
    db: null
    url: "@format postgresql+asyncpg://{this.postgres.user}:{this.postgres.password}@{this.postgres.host}:{this.postgres.port}/{this.postgres.db}"

testing:
  test: 1
  debug: true
  eva_backend:
    url: "http://test-api:8000"
    patch_endpoint: "/ai/image/update"
    backend_image_patch_route: "@format {this.eva_backend.url}{this.eva_backend.patch_endpoint}"
  
  bentoml:
    hf_offline: "false"
    service:
      api:
        workers: 1
        resources:
          cpu: 1
          memory: 1Gi
      embedding:
        workers: 1
        resources:
          cpu: 1
          memory: 4Gi
    inference:
      fast_batched_op_max_batch_size: 2
      fast_batched_op_max_latency_ms: 100
      slow_batched_op_max_batch_size: 2
      slow_batched_op_max_latency_ms: 100

  postgres:
    host: "localhost"
    port: 5432
    user: "postgres"
    password: "password"
    db: "eva_ai_test"
    url: "@format postgresql+asyncpg://{this.postgres.user}:{this.postgres.password}@{this.postgres.host}:{this.postgres.port}/{this.postgres.db}"
