name: Build
on:
  pull_request:
    branches:
      - 'main'
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  check-test-status:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - id: check
        name: Check Test workflow status
        run: |
          TEST_STATUS=$(gh run list --workflow=Test.yml --branch=${{ github.head_ref }} --json conclusion --jq '.[0].conclusion')
          if [[ "$TEST_STATUS" == "success" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        timeout-minutes: 3

      - name: Setup Python
        uses: actions/setup-python@v5
        timeout-minutes: 3
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Restore virtual environment
        uses: actions/cache/restore@v3
        timeout-minutes: 3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/pyproject.toml') }}

      - name: Source virtual environment
        timeout-minutes: 1
        run: |
          source .venv/bin/activate

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        timeout-minutes: 3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        timeout-minutes: 3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build container
        timeout-minutes: 20
        env:
          VIRTUAL_ENV: ${{ github.workspace }}/.venv
          PATH: ${{ github.workspace }}/.venv/bin:${{ env.PATH }}
          EVA_AI_MODEL__CACHE_DIR: ${{ github.event.inputs.EVA_AI_MODEL__CACHE_DIR || '/tmp/cache' }}
          EVA_AI_MODEL__PRE_DOWNLOAD_DURING_BUILD: ${{ github.event.inputs.EVA_AI_MODEL__PRE_DOWNLOAD_DURING_BUILD || 'true' }}
        uses: bentoml/containerize-push-action@v1
        with:
          context: ./
          bentofile: ./bentofile.yaml
          bento-tag: evagallery_ai_api:latest
          secret-envs: |
            EVA_AI_MODEL__CACHE_DIR=EVA_AI_MODEL__CACHE_DIR
            EVA_AI_MODEL__PRE_DOWNLOAD_DURING_BUILD=EVA_AI_MODEL__PRE_DOWNLOAD_DURING_BUILD
            CI=CI
          push: false
          tags: evagalleryone/ai:latest